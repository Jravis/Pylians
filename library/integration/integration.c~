#include <stdio.h>
#include <math.h>
#include "integration.h"

// This function assumes data linearly spaced in a
inline double func(double x, double *a, double *b, int elements,
		   double a_min, double a_max)
{
  int index;
  
  index = (int)((x-a_min)/(a_max-a_min)*elements);
  if (index==elements)
    index = (elements-1);

  return (b[index+1] - b[index])/(a[index+1]-a[index])*(x-a[index]) + b[index];

}


// For this integration method, there is no need to use more steps than
// elements in the input array
double rectangular(double x_min, double x_max, double *x, double *y,
		   long elements)
{
  double x_value, I=0.0;
  long step;

  for (step=0; step<elements; step++)
    {
      x_value = (x_max-x_min)*(step+0.5)/steps;
      I += func(x_value, x, y, elements, x_min, x_max);
    }

  return I*(x_max-x_min)/elements;
  
}
